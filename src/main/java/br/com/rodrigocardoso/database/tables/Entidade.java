/*
 * This file is generated by jOOQ.
*/
package br.com.rodrigocardoso.database.tables;


import br.com.rodrigocardoso.database.Indexes;
import br.com.rodrigocardoso.database.Keys;
import br.com.rodrigocardoso.database.Public;
import br.com.rodrigocardoso.database.tables.records.EntidadeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Entidade extends TableImpl<EntidadeRecord> {

    private static final long serialVersionUID = 388817415;

    /**
     * The reference instance of <code>public.entidade</code>
     */
    public static final Entidade ENTIDADE = new Entidade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntidadeRecord> getRecordType() {
        return EntidadeRecord.class;
    }

    /**
     * The column <code>public.entidade.id</code>.
     */
    public final TableField<EntidadeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('entidade_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.entidade.created</code>.
     */
    public final TableField<EntidadeRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.entidade.modified</code>.
     */
    public final TableField<EntidadeRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.entidade.active</code>.
     */
    public final TableField<EntidadeRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.entidade</code> table reference
     */
    public Entidade() {
        this(DSL.name("entidade"), null);
    }

    /**
     * Create an aliased <code>public.entidade</code> table reference
     */
    public Entidade(String alias) {
        this(DSL.name(alias), ENTIDADE);
    }

    /**
     * Create an aliased <code>public.entidade</code> table reference
     */
    public Entidade(Name alias) {
        this(alias, ENTIDADE);
    }

    private Entidade(Name alias, Table<EntidadeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Entidade(Name alias, Table<EntidadeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTIDADE_ID_UINDEX, Indexes.ENTIDADE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EntidadeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ENTIDADE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntidadeRecord> getPrimaryKey() {
        return Keys.ENTIDADE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntidadeRecord>> getKeys() {
        return Arrays.<UniqueKey<EntidadeRecord>>asList(Keys.ENTIDADE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Entidade as(String alias) {
        return new Entidade(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Entidade as(Name alias) {
        return new Entidade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Entidade rename(String name) {
        return new Entidade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Entidade rename(Name name) {
        return new Entidade(name, null);
    }
}
