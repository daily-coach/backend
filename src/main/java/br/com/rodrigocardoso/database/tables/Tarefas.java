/*
 * This file is generated by jOOQ.
*/
package br.com.rodrigocardoso.database.tables;


import br.com.rodrigocardoso.database.Indexes;
import br.com.rodrigocardoso.database.Keys;
import br.com.rodrigocardoso.database.Public;
import br.com.rodrigocardoso.database.tables.records.TarefasRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tarefas extends TableImpl<TarefasRecord> {

    private static final long serialVersionUID = -1089180943;

    /**
     * The reference instance of <code>public.tarefas</code>
     */
    public static final Tarefas TAREFAS = new Tarefas();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TarefasRecord> getRecordType() {
        return TarefasRecord.class;
    }

    /**
     * The column <code>public.tarefas.id</code>.
     */
    public final TableField<TarefasRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('entidade_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tarefas.created</code>.
     */
    public final TableField<TarefasRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.tarefas.modified</code>.
     */
    public final TableField<TarefasRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.tarefas.active</code>.
     */
    public final TableField<TarefasRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.tarefas.titulo</code>.
     */
    public final TableField<TarefasRecord, String> TITULO = createField("titulo", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.tarefas.descricao</code>.
     */
    public final TableField<TarefasRecord, String> DESCRICAO = createField("descricao", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tarefas.dia</code>.
     */
    public final TableField<TarefasRecord, Integer> DIA = createField("dia", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.tarefas</code> table reference
     */
    public Tarefas() {
        this(DSL.name("tarefas"), null);
    }

    /**
     * Create an aliased <code>public.tarefas</code> table reference
     */
    public Tarefas(String alias) {
        this(DSL.name(alias), TAREFAS);
    }

    /**
     * Create an aliased <code>public.tarefas</code> table reference
     */
    public Tarefas(Name alias) {
        this(alias, TAREFAS);
    }

    private Tarefas(Name alias, Table<TarefasRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tarefas(Name alias, Table<TarefasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TAREFAS_ID_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TarefasRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TAREFAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TarefasRecord> getPrimaryKey() {
        return Keys.TAREFAS_ID_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TarefasRecord>> getKeys() {
        return Arrays.<UniqueKey<TarefasRecord>>asList(Keys.TAREFAS_ID_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tarefas as(String alias) {
        return new Tarefas(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tarefas as(Name alias) {
        return new Tarefas(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tarefas rename(String name) {
        return new Tarefas(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tarefas rename(Name name) {
        return new Tarefas(name, null);
    }
}
